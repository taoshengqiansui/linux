library(metaRNASeq)
study2 <- read.table(file = "./GSE152586.matrix",header = T,row.names = 1)
study4 <- read.table(file = "./GSE155518.matrix",header = T,row.names = 1)
study2 <- read.table(file = "./GSE152586.matrix",header = T,row.names = 1)
library(metaRNASeq)
study2 <- read.table(file = "./GSE152586.matrix",header = T,row.names = 1)
study4 <- read.table(file = "./GSE155518.matrix",header = T,row.names = 1)
study4 <- study4[,c(4:6,1:3)]
study6 <- read.table(file = "./GSE160435.matrix",header = T,row.names = 1)
study6 <- study6[,c(3,4,6,9,10,1,2,5,7,8)]
study4 <- study4[rownames(study2),]
study6 <- study6[rownames(study2),]
c2 <- c(rep("Normal",times = 3),rep("Infected",times = 3))
c4 <- c(rep("Normal",times = 3),rep("Infected",times = 3))
c6 <- c(rep("Normal",times = 5),rep("Infected",times = 5))
colData2 <- data.frame("study"=c("study2","study2",
"study2","study2","study2","study2"),
"condition"=c2,row.names = c("Normal1","Normal2","Normal3",
"Infected1","Infected2","Infected3"))
colData4 <- data.frame("study"=c(rep("study4",times = 6)),"condition"=c4,
row.names = c(paste("Normal",c(1:3),sep = ""),paste("Infected",c(1:3),sep = "")))
colData6 <- data.frame("study"=c("study6","study6","study6","study6","study6","study6",
"study6","study6","study6","study6"),
"condition"=c6,row.names = c(paste("Normal",c(1:5),sep = ""),
paste("Infected",c(1:5),sep = "")))
if (requireNamespace("DESeq2", quietly = TRUE)) {
dds2 <- DESeq2::DESeqDataSetFromMatrix(countData = study2,
colData = colData2,design = ~ condition)
res2 <- DESeq2::results(DESeq2::DESeq(dds2))
dds4 <- DESeq2::DESeqDataSetFromMatrix(countData = study4,
colData = colData4,design = ~ condition)
res4 <- DESeq2::results(DESeq2::DESeq(dds4))
dds6 <- DESeq2::DESeqDataSetFromMatrix(countData = study6,
colData = colData6,design = ~ condition)
res6 <- DESeq2::results(DESeq2::DESeq(dds6))}
rawpval <- list("pval1"=res2[["pvalue"]],"pval2"=res4[["pvalue"]],"pval3"=res6[["pvalue"]])
FC <- list("FC1"=res2[["log2FoldChange"]],"FC2"=res4[["log2FoldChange"]],"FC3"=res6[["log2FoldChange"]])
##  获取每个数据的Fold change和原始P值并合并为Fold change列表和P值列表
adjpval <- list("adjpval1"=res2[["padj"]],"adjpval2"=res4[["padj"]],"adjpval3"=res6[["padj"]])
## 获取每个数据的矫正后的P值并合并为列表
studies <- c("study1","study2","study3")
DE <- mapply(adjpval, FUN=function(x) ifelse(x <= 0.05, 1, 0))
colnames(DE)=paste("DE",studies,sep=".")
#studies为前面定义的一个含有两个字符串的向量
#三.检验数据是否符合均匀分布，即检验合并P值的方法是否可行
par(mfrow = c(2,2))
hist(rawpval[[1]], breaks=100, col="grey", main="Study 1", xlab="Raw p-values")
hist(rawpval[[2]], breaks=100, col="grey", main="Study 2", xlab="Raw p-values")
hist(rawpval[[3]], breaks=100, col="grey", main="Study 3", xlab="Raw p-values")
##结果不是很好，因为rawpval中有很多的NA(DESeq2的分析结果)，不确定
filtered <- lapply(adjpval, FUN=function(pval) which(is.na(pval)))
rawpval[[1]][filtered[[1]]]=NA
rawpval[[2]][filtered[[2]]]=NA
rawpval[[3]][filtered[[3]]]=NA
par(mfrow = c(2,2))
hist(rawpval[[1]], breaks=100, col="grey", main="Study 1",xlab="Raw p-values")
hist(rawpval[[2]], breaks=100, col="grey", main="Study 2",xlab="Raw p-values")
hist(rawpval[[3]], breaks=100, col="grey", main="Study 3", xlab="Raw p-values")
##结果好了很多
#四.meta合并
##1.fisher合并
metacomb <- fishercomb(rawpval, BHth = 0.05)
hist(metacomb$rawpval, breaks=100, col="grey", main="Fisher method",
xlab = "Raw p-values (meta-analysis)")
##2.逆正太合并
#invnormcomb <- invnorm(rawpval,nrep=c(8,8), BHth = 0.05)
#hist(invnormcomb$rawpval, breaks=100, col="grey",
#main="Inverse normal method",
#xlab = "Raw p-values (meta-analysis)")
DEresults <- data.frame(DE,
"DE.fishercomb"=ifelse(metacomb$adjpval<=0.05,1,0))
#,"DE.invnorm"=ifelse(invnormcomb$adjpval<=0.05,1,0))
#DE已经有两列,再加两列,DEresults只显示了是否是差异表达基因
head(DEresults)
signsFC <- mapply(FC, FUN=function(x) sign(x))
##sign()函数结果:正为1,0为0,负为-1.
sumsigns <- apply(signsFC,1,sum)
##margin=1/2,1代表行,2代表列.
##如果signsFC中有表达不一致的基因,则结果为0.
##所以这一步是筛选出表达一致的(都是上调或下调)的基因.
commonsgnFC <- ifelse(abs(sumsigns)==dim(signsFC)[2], sign(sumsigns),0)
##除了表达一致的基因为(2变为1)1,其他都为0
unionDE <- unique(c(metacomb$DEindices))
#invnormcomb$DEindices))
##筛选出两种合并方法中的所有差异基因所对应的索引,包括只在一种方法中显示的差异基因
##分别length():fishcomb$DEindices,invnormcomb$DEindices,unionDE,结果为1452,1390,1460
FC.selecDE <- data.frame(DEresults[unionDE,],do.call(cbind,FC)[unionDE,],
signFC=commonsgnFC[unionDE])
FC.selecDE$DE <- ifelse(abs(FC.selecDE$signFC)==1,TRUE,FALSE)
FC.selecDE <- FC.selecDE[!is.na(FC.selecDE$DE),]
##去除DE=NA所在的行
##do.call传递命令,命令为cbind,对象为FC,FC按列合并,也就是将两个数据的合并成了两列
##4+2+1+1
keepDE <- FC.selecDE[which(abs(FC.selecDE$signFC)==1),]
##两套数据所得到的表达一致的基因保留下来
conflictDE <- FC.selecDE[which(FC.selecDE$signFC == 0),]
##表达矛盾的基因
dim(FC.selecDE)
dim(keepDE)
dim(conflictDE)
head(keepDE)
table(conflictDE$DE)
#韦恩图
fishcomb_de <- rownames(keepDE)[which(keepDE[,"DE.fishercomb"]==1)]
#invnorm_de <- rownames(keepDE)[which(keepDE[,"DE.invnorm"]==1)]
indstudy_de <- list(rownames(keepDE)[which(keepDE[,"DE.study1"]==1)],
rownames(keepDE)[which(keepDE[,"DE.study2"]==1)],
rownames(keepDE)[which(keepDE[,"DE.study3"]==1)])
length(fishcomb_de)
#length(invnorm_de)
length(indstudy_de[[1]])
length(indstudy_de[[2]])
length(indstudy_de[[3]])
length(indstudy_de[[4]])
IDD.IRR(fishcomb_de,indstudy_de)
#IDD.IRR(invnorm_de ,indstudy_de)
if (require("VennDiagram", quietly = TRUE)) {
venn.plot<-venn.diagram(x = list(study1=which(keepDE[,"DE.study1"]==1),
study2=which(keepDE[,"DE.study2"]==1),
study3=which(keepDE[,"DE.study3"]==1),
fisher=which(keepDE[,"DE.fishercomb"]==1)),
filename = NULL, col = "black",
fill = c("blue","purple","green","yellow"),
margin=0.05, alpha = 0.6)
jpeg("at2_jpeg.jpg");
grid.draw(venn.plot);dev.off();}
##所有DEG
###ID转换
x = list(study1=which(keepDE[,"DE.study1"]==1),
study2=which(keepDE[,"DE.study2"]==1),
study3=which(keepDE[,"DE.study3"]==1),
fisher=which(keepDE[,"DE.fishercomb"]==1))
all.ensemblID <- rownames(study2[as.integer(rownames(keepDE)),])
fisher <- x$fisher
View(keepDE)
fisherDE <- keepDE[,c(-1:-4)]
####取FC、signFC、DE这几列
skeepDE <- keepDE[,c(-1:-4)]
foldchange <- data.frame(skeepDE$FC1,skeepDE$FC2,skeepDE$FC3)
View(foldchange)
skeepDE$FC <- rowMeans(FC_all)
skeepDE$FC <- rowMeans(foldchange)
View(skeepDE)
skeepDE$derection <- ifelse(skeepDE$signFC==1,"DOWN","UP")
View(skeepDE)
#skeepDE <- skeepDE[,c(6,8)]
rownames(skeepDE) <- all.ensemblID
View(skeepDE)
library("org.Hs.eg.db")
ensembl2symbol<-select(org.Hs.eg.db, keys=rownames(skeepDE), columns=c("SYMBOL","ENTREZID"), keytype="ENSEMBL")
View(ensembl2symbol)
table(ensembl2symbol$ENSEMBL)
head(table(ensembl2symbol$ENSEMBL))
tail(table(ensembl2symbol$ENSEMBL))
tail(sort(table(ensembl2symbol$ENSEMBL)))
tail(sort(table(ensembl2symbol$ENSEMBL)),10)
tail(sort(table(ensembl2symbol$ENSEMBL)),30)
tail(sort(table(ensembl2symbol$ENSEMBL)),100)
tail(sort(table(ensembl2symbol$ENSEMBL)),10)
tail(sort(table(ensembl2symbol$ENSEMBL)),120)
tail(sort(table(ensembl2symbol$ENSEMBL)),20)
rownames(meta_symbol) <- meta_symbol$ENSEMBL# 找出重复ID
rownames(ensembl2symboll) <- ensembl2symbol$ENSEMBL# 找出重复ID
rownames(ensembl2symbol) <- ensembl2symbol$ENSEMBL# 找出重复ID
####去掉NA
which(is.na(ensembl2symbol$SYMBOL)==T)
####去掉NA
as.integer(which(is.na(ensembl2symbol$SYMBOL)==F))
####去掉NA
a <- ensembl2symbol[as.integer(which(is.na(ensembl2symbol$SYMBOL)==F)),]
which(is.na(ensembl2symbol$SYMBOL)==T)
length(which(is.na(ensembl2symbol$SYMBOL)==T))
####去掉NA
ensembl2symbol <- ensembl2symbol[as.integer(which(is.na(ensembl2symbol$SYMBOL)==F)),]
rownames(ensembl2symbol) <- ensembl2symbol$ENSEMBL# 找出重复ID
View(ensembl2symbol)
ensembl2symbol <- ensembl2symbol[c(-1317,-1461,-1346,-408,-928,-1498,-371,-886,-750,-1289),]
##所有DEG
###ID转换
x = list(study1=which(keepDE[,"DE.study1"]==1),
study2=which(keepDE[,"DE.study2"]==1),
study3=which(keepDE[,"DE.study3"]==1),
fisher=which(keepDE[,"DE.fishercomb"]==1))
all.ensemblID <- rownames(study2[as.integer(rownames(keepDE)),])
fisher <- x$fisher
####取FC、signFC、DE这几列
skeepDE <- keepDE[,c(-1:-4)]
foldchange <- data.frame(skeepDE$FC1,skeepDE$FC2,skeepDE$FC3)
skeepDE$FC <- rowMeans(foldchange)
skeepDE$derection <- ifelse(skeepDE$signFC==1,"DOWN","UP")
#skeepDE <- skeepDE[,c(6,8)]
rownames(skeepDE) <- all.ensemblID
library("org.Hs.eg.db")
ensembl2symbol<-select(org.Hs.eg.db, keys=rownames(skeepDE), columns=c("SYMBOL","ENTREZID"), keytype="ENSEMBL")
####去掉NA,1950-1711，共239个NA
ensembl2symbol <- cbind(ensembl2symbol,skeepDE)
ensembl2symbol<-select(org.Hs.eg.db, keys=rownames(skeepDE), columns=c("SYMBOL","ENTREZID"), keytype="ENSEMBL")
ensembl2symbol <- cbind(ensembl2symbol,skeepDE)
ensembl2symbol <- ensembl2symbol[c(-1317,-1461,-1346,-408,-928,-1498,-371,-886,-750,-1289),]
ensembl2symbol<-select(org.Hs.eg.db, keys=rownames(skeepDE), columns=c("SYMBOL","ENTREZID"), keytype="ENSEMBL")
ensembl2symbol <- ensembl2symbol[c(-1317,-1461,-1346,-408,-928,-1498,-371,-886,-750,-1289),]
ensembl2symbol <- cbind(ensembl2symbol,skeepDE)
View(ensembl2symbol)
ensembl2symbol <- ensembl2symbol[as.integer(which(is.na(ensembl2symbol$SYMBOL)==F)),]
###富集分析
library(clusterProfiler)
ensembl2symbol <- ensembl2symbol[,c(1,2,3,9,10)]
View(ensembl2symbol)
###富集分析
library(clusterProfiler)
library(ggplot2)
ego <- enrichGO(gene = ensembl2symbol$ENTREZID, OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", ont = "ALL",qvalueCutoff=0.05)
barplot(ego,showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
ega <- as.data.frame(ego)
View(ega)
###KEGG
kk <- enrichKEGG(gene = ensembl2symbol$ENTREZID,organism = "hsa",pvalueCutoff = 0.05,qvalueCutoff = 0.05)
kk <- setReadable(kk,org.Hs.eg.db,keyType = "ENTREZID")
allgene.fc <- ensembl2symbol$FC
names(allgene.fc) <- ensembl2symbol$SYMBOL
allgene.fc <- sort(allgene.fc,decreasing = T)
barplot(kk,showCategory = 10)
barplot(ego,showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
barplot(kk,showCategory = 10)
dotplot(kk,showCategory = 10)
cnetplot(kk,foldChange = allgene.fc,showCategory = 10,node_label = "all",circular = TRUE,colorEdge =TRUE, color_gene = "red",cex_label_gene = 0.3)
cnetplot(kk,foldChange = allgene.fc,showCategory = 5,node_label = "all",circular = TRUE,colorEdge =TRUE, color_gene = "red",cex_label_gene = 0.3)
View(ensembl2symbol)
#不可用emapplot(kk,showCategory = 6,pie = "count")
write.csv(ensembl2symbol,file = "./all.csv",row.names = 1,col.names = T)
#不可用emapplot(kk,showCategory = 6,pie = "count")
write.csv(ensembl2symbol,file = "./all.csv",row.names = 1)
#不可用emapplot(kk,showCategory = 6,pie = "count")
write.csv(ensembl2symbol,file = "./all.csv")
View(study2)
study2$ensemble <- rownames(study2)
study4$ensemble <- rownames(study2)
study6$ensemble <- rownames(study2)
View(x)
View(x)
##新发现DEG
x = list(study1=which(keepDE[,"DE.study1"]==1),
study2=which(keepDE[,"DE.study2"]==1),
study3=which(keepDE[,"DE.study3"]==1),
fisher=which(keepDE[,"DE.fishercomb"]==1))
a <- sort(as.vector(c(x$study1,x$study2,x$study3))
)
a <- sort(as.vector(c(x$study1,x$study2,x$study3)))
b <- as.vector(x$fisher)
length(a)
length(b)
a <- unique(a)
length(a)
list <- b[which(b %in% a == FALSE)]
#list指的是keepDE的索引而不是行名
keepde <- keepDE[list,]
list2 <- as.integer(rownames(keepDE[list,]))
#list2指的是study1中的索引，而不是行名
name <- rownames(study1[list2,])
#list2指的是study1中的索引，而不是行名
name <- rownames(study2[list2,])
IDD.IRR(fishcomb_de,indstudy_de)
View(ensembl2symbol)
which(name %in% ensembl2symbol$ENSEMBL)
which(ensembl2symbol$ENSEMBL %in% name)
ensembl2symbol[which(ensembl2symbol$ENSEMBL %in% name),]
meta <- ensembl2symbol[which(ensembl2symbol$ENSEMBL %in% name),]
View(meta)
ego <- enrichGO(gene = meta$ENTREZID, OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", ont = "ALL",qvalueCutoff=0.05)
barplot(ego,showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
ego <- enrichGO(gene = meta$ENTREZID, OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", ont = "ALL",qvalueCutoff=0.05)
class(ego)
barplot(ego,showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
barplot(as.data.frame(ego),showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
###GO
ego <- enrichGO(gene = ensembl2symbol$ENTREZID, OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", ont = "ALL",qvalueCutoff=0.05)
barplot(ego,showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
View(meta)
go <- enrichGO(gene = meta$ENTREZID, OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", ont = "ALL",qvalueCutoff=0.05)
class(meta)
class(ensembl2symbol)
barplot(go,showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
barplot(as.data.frame(go),showCategory = 8,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
View(go)
barplot(go,showCategory = 4,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
rlang::last_error()
go <- as.data.frame(go)
View(meta)
meta$ENTREZID
#barplot(go,showCategory = 4,split ="ONTOLOGY")+facet_grid(ONTOLOGY~.,scales = "free")
write.csv(meta,file = "./meta.csv")
View(meta)
?autoplot
?prcomp
?aes()
